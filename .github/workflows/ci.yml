name: Test Coverage

on:
  push:
    branches: [master, main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      # - name: Cache Composer packages
      #   id: composer-cache
      #   uses: actions/cache@v2
      #   with:
      #     path: vendor
      #     key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-php-

      - name: Install dependencies
        # if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress

      - name: Run test suite
        env:
          XDEBUG_MODE: coverage
        run: vendor/bin/phpunit

      - name: Coddle Coveralls
        run: |
          mkdir -p build/logs
          cp coverage.xml build/logs/clover.xml

      # Note: The coveralls action did not work. This step installs
      # php-converalls, then sends the clover formatted coverage data
      # directly. COVERALLS_TOKEN is a secret value from here:
      # https://coveralls.io/github/ideasonpurpose/wp-admin-separators
      - name: Upload to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
          COVERALLS_RUN_LOCALLY: yes
        run: |
          composer require 'php-coveralls/php-coveralls:^2.5.1'
          vendor/bin/php-coveralls -v
